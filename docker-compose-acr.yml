version: '2.1'

services:
  eureka:
    build: eurekaserver
    image: scmcontainer.azurecr.io/eurekaserver
    mem_limit: 350m
    networks:
      - mynetwork
    environment:
    - JAVA_OPTS=-Djdk.tls.client.protocols=TLSv1.2
    ports:
      - "8761:8761"

  user-service:
    build: user-service
    image: scmcontainer.azurecr.io/user-service
    mem_limit: 350m
    networks:
      - mynetwork
    ports:
      - "7001:8080"
    volumes:
      - ./logs:/log
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - JAVA_OPTS=-Djdk.tls.client.protocols=TLSv1.2
      
  gateway:
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - JAVA_OPTS=-Djdk.tls.client.protocols=TLSv1.2
    build: gateway
    networks:
      - mynetwork
    image: scmcontainer.azurecr.io/gateway
    mem_limit: 350m
    ports:
      - "8080:8080"
      
  trends:
    build: data-trends-predictions
    image: scmcontainer.azurecr.io/data-trends-predictions
    networks:
      - mynetwork
    mem_limit: 350m
    ports:
      - "7002:8080"

  real-time-data-processor:
    build: real-time-data-processor
    image: scmcontainer.azurecr.io/real-time-data-processor
    mem_limit: 350m
    networks:
      - mynetwork
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "8005:8080"
    depends_on:
      - kafka
  
  kafka:
    image: wurstmeister/kafka:2.13-2.8.1
    mem_limit: 350m
    networks:
      - mynetwork
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ADVERTISED_PORT=9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
    depends_on:
      - zookeeper

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    mem_limit: 350m
    networks:
      - mynetwork
    ports:
      - "2181:2181"
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=zookeeper

  networks:
    mynetwork:
       name: mynetwork