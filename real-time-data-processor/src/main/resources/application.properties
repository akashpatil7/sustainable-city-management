server.port= 8005
spring.application.name: real-time-data-processor
app.eureka-server: localhost
app.kafka-server: localhost

eureka:
  client:
    serviceUrl:
      defaultZone: http://${app.eureka-server}:8761/eureka/
    initialInstanceInfoReplicationIntervalSeconds: 5
    registryFetchIntervalSeconds: 5
  instance:
    leaseRenewalIntervalInSeconds: 5
    leaseExpirationDurationInSeconds: 5

spring.kafka.consumer.bootstrap-servers=${app.kafka-server}:9092
spring.kafka.consumer.group-id=mygroup
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

spring.kafka.producer.bootstrap-servers=${app.kafka-server}:9092
spring.kafka.producer.key-deserializer = org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.value-deserializer = org.apache.kafka.common.serialization.StringDeserializer

spring.data.mongodb.uri= mongodb+srv://admin:admin@cluster1.varva.mongodb.net/city_dashboard
spring.data.mongodb.database= city_dashboard

dublinBikesLatestDataURL= https://data.smartdublin.ie/dublinbikes-api/last_snapshot/
aqiLatestDataURL= https://api.waqi.info/search/?token=6405c2482f44780e0d1eb1387bc9ee17edfd0b51&keyword=dublin
pedestrianLatestDataURL= https://data.smartdublin.ie/api/3/action/datastore_search?resource_id=2beeedcc-7fe6-4ae2-b8c7-ee8179686595&limit=1
---
spring.profiles: docker
app.eureka-server: eureka
app.kafka-server: kafka
server.port= 8080