# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: maven
    - name: Build server with Maven
      run: mvn -B clean package --file eurekaserver/pom.xml
    - name: Build utils with Maven
      run: mvn -B clean install --file utils/pom.xml
    - name: Build gateway with Maven
      run: mvn -B clean package --file gateway/pom.xml
    - name: Build user service with Maven
      run: mvn -B clean package --file user-service/pom.xml
    - name: Build external data with Maven
      run: mvn -B clean package --file external_data/pom.xml
    - name: Build external data with Maven
      run: mvn -B clean package --file real-time-data-processor/pom.xml
    - name: Build Images
      run: docker-compose -f docker-compose.yml build
    - uses: azure/docker-login@v1
      with:
       login-server: scmcontainer.azurecr.io
       username: ${{ secrets.ACR_USERNAME }}
       password: ${{ secrets.ACR_PASSWORD }}
    - name: Push docker images to ACR
      run: docker-compose -f docker-compose.yml push --ignore-push-failures
