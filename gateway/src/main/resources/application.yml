server.port: 8080

spring.application.name: gateway

app.eureka-server: localhost
spring.security.enabled: false

eureka:
  client:
    serviceUrl:
      defaultZone: http://${app.eureka-server}:8761/eureka/
    initialInstanceInfoReplicationIntervalSeconds: 5
    registryFetchIntervalSeconds: 5
  instance:
    leaseRenewalIntervalInSeconds: 5
    leaseExpirationDurationInSeconds: 5

spring.cloud.gateway.routes:
- id: eureka-api
  uri: http://${app.eureka-server}:8761
  predicates:
  - Path=/eureka/api/{segment}
  filters:
  - SetPath=/eureka/{segment}

- id: eureka-web-start
  uri: http://${app.eureka-server}:8761
  predicates:
  - Path=/eureka/web
  filters:
  - SetPath=/

- id: eureka-web-other
  uri: http://${app.eureka-server}:8761
  predicates:
  - Path=/eureka/**
  
- id: user-service
  uri: lb://user-service
  predicates:
  - Path=/user/**
  filters:
  - AuthenticationGatewayFilter
  
- id: trends
  uri: lb://trends
  predicates:
  - Path=/getCurrentHourAverages/**
  filters:
  - AuthenticationGatewayFilter

- id: external-data
  uri: lb://external-data
  predicates:
  - Path=/realTimeData/**
  filters:
  - AuthenticationGatewayFilter

spring:
  cloud:
    gateway:
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: "*"
            allowedMethods:
            - GET
            - POST
            allowedHeaders: "*"



security.enable.csrf: false

logging:
  level:
    root: INFO
    org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator: INFO
    org.springframework.cloud.gateway: TRACE


---
spring.profiles: docker
app.eureka-server: eureka