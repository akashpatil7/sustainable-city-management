version: '2.1'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 9092
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:9092
  
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  eureka:
    build: eurekaserver
    mem_limit: 350m
    environment:
    - JAVA_OPTS=-Djdk.tls.client.protocols=TLSv1.2
    ports:
      - "8761:8761"

  user-service:
    build: user-service
    mem_limit: 350m
    ports:
      - "7001:8080"
    volumes:
      - ./logs:/log
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - JAVA_OPTS=-Djdk.tls.client.protocols=TLSv1.2
      
  gateway:
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - JAVA_OPTS=-Djdk.tls.client.protocols=TLSv1.2
    build: gateway
    mem_limit: 350m
    ports:
      - "8080:8080"
      
  trends:
    build: data-trends-predictions
    mem_limit: 350m
    ports:
      - "7002:8050"
      
  external_data:
    build: external_data
    mem_limit: 350m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "7003:8080"

  real-time-data-processor:
    build: real-time-data-processor
    mem_limit: 350m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "8005:8080"